def add_ai_cd_values_to_gauge_df(self,input_gauge_df):
		ai_cd_result_paths_in_gauge_df = input_gauge_df['ai_cd_result_path'].unique()
		ai_cd_result_paths_in_gauge_df = ai_cd_result_paths_in_gauge_df[~pd.isnull(ai_cd_result_paths_in_gauge_df)] #remove nan values
		for ai_cd_result_path in ai_cd_result_paths_in_gauge_df:
				with open(ai_cd_result_path,'r') as file:
					femcalresultid = self.get_femcalresultid_from_result_txt_path(ai_cd_result_path,'ai_cd_result')
					gauges_to_assign_ai_cd = input_gauge_df[input_gauge_df['femcalresultid']==femcalresultid]
					processids_to_assign_ai_cd = gauges_to_assign_ai_cd.drop_duplicates(subset=['Delta_Dose(%)','#Delta_Focus(nm)'])['processid']
					for line in file:
						current_line = line.strip()
						gauge_name = current_line.split(' ')[0]
						if not(gauges_to_assign_ai_cd[gauges_to_assign_ai_cd['gauge']==gauge_name].empty):
							current_ai_cd_values = current_line.split(' ')[1:-1]
							for index,current_ai_cd_value in enumerate(current_ai_cd_values):
								current_process_id = processids_to_assign_ai_cd.iloc[index]
								input_gauge_df.loc[((input_gauge_df['ai_cd_result_path']==ai_cd_result_path) & (input_gauge_df['gauge']==gauge_name) & (input_gauge_df['processid']==current_process_id)),'AI_CD'] = current_ai_cd_value
		return input_gauge_df
					
		
